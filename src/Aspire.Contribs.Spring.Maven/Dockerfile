# Start with a base image containing Java runtime
FROM mcr.microsoft.com/openjdk/jdk:17-ubuntu as build

# Set the working directory
WORKDIR /app

# Copy the .jar file into the container at /app
COPY ./target/spring-maven-0.0.1-SNAPSHOT.jar /app/app.jar

# Download the OpenTelemetry Java agent
RUN apt update && \
    apt upgrade -y && \
    apt install -y wget && \
    apt clean -y && \
    rm -rf /var/lib/apt/lists/*

RUN wget -P /app https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent.jar
RUN chmod +x /app/opentelemetry-javaagent.jar

ENV JAVA_TOOL_OPTIONS="-javaagent:/app/opentelemetry-javaagent.jar"

ENV OTEL_BLRP_SCHEDULE_DELAY=OTEL_BLRP_SCHEDULE_DELAY
ENV OTEL_BSP_SCHEDULE_DELAY=OTEL_BSP_SCHEDULE_DELAY
# ENV OTEL_DOTNET_EXPERIMENTAL_ASPNETCORE_DISABLE_URL_QUERY_REDACTION=OTEL_DOTNET_EXPERIMENTAL_ASPNETCORE_DISABLE_URL_QUERY_REDACTION
ENV OTEL_DOTNET_EXPERIMENTAL_HTTPCLIENT_DISABLE_URL_QUERY_REDACTION=OTEL_DOTNET_EXPERIMENTAL_HTTPCLIENT_DISABLE_URL_QUERY_REDACTION
ENV OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES=OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES
ENV OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES=OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES
ENV OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY=OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY
ENV OTEL_EXPORTER_OTLP_ENDPOINT=OTEL_EXPORTER_OTLP_ENDPOINT
ENV OTEL_EXPORTER_OTLP_HEADERS=OTEL_EXPORTER_OTLP_HEADERS
ENV OTEL_EXPORTER_OTLP_PROTOCOL=OTEL_EXPORTER_OTLP_PROTOCOL
ENV OTEL_METRIC_EXPORT_INTERVAL=OTEL_METRIC_EXPORT_INTERVAL
ENV OTEL_RESOURCE_ATTRIBUTES=OTEL_RESOURCE_ATTRIBUTES
ENV OTEL_SERVICE_NAME=OTEL_SERVICE_NAME
ENV OTEL_TRACES_SAMPLER=OTEL_TRACES_SAMPLER

# Make port 8080 available to the world outside this container
EXPOSE 8080

# Run the jar file
ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
# ENTRYPOINT [ "java", "-jar", "/app/app.jar" ]
